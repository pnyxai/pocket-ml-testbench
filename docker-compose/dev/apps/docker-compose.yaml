services:
  manager:
    build:
      context: ../../../
      dockerfile: apps/go/manager/Dockerfile
    image: pocket_ml_testbench_manager:dev
    container_name: manager
    environment:
      CONFIG_PATH: /home/app/configs/config.json
    extra_hosts:
      host.docker.internal: host-gateway
    volumes:
      - $MANAGER_CONFIG_FILE:/home/app/configs/config.json
    networks:
      - temporal
      - mongodb

  sampler:
    build:
      context: ../../../
      dockerfile: apps/python/sampler/Dockerfile
    image: pocket_ml_testbench_sampler:dev
    environment:
      CONFIG_PATH: /home/app/configs/config.json
      OPENAI_API_KEY: EMPTY
      HF_DATASETS_TRUST_REMOTE_CODE: "True"
      DATASETS_TRUST_REMOTE_CODE: "True"
      HF_DATASETS_DISABLE_PROGRESS_BARS: "True"
      TQDM_DISABLE: "True"
      EVALUATE_VERBOSITY: "error"
      DATASETS_VERBOSITY: "error"
    deploy:
      replicas: 5
    extra_hosts:
      host.docker.internal: host-gateway
    volumes:
      - $SAMPLER_CONFIG_FILE:/home/app/configs/config.json
    networks:
     - postgresql
     - temporal
     - mongodb
     
  requester:
    build:
      context: ../../../
      dockerfile: apps/go/requester/Dockerfile
    image: pocket_ml_testbench_requester:dev
    container_name: requester
    environment:
      CONFIG_PATH: /home/app/configs/config.json
    extra_hosts:
      host.docker.internal: host-gateway
    volumes:
      - $REQUESTER_CONFIG_FILE:/home/app/configs/config.json
    networks:
      - temporal
      - mongodb
  
  evaluator:
    build:
      context: ../../../
      dockerfile: apps/python/evaluator/Dockerfile
    image: pocket_ml_testbench_evaluator:dev
    environment:
      CONFIG_PATH: /home/app/configs/config.json
      OPENAI_API_KEY: EMPTY
      HF_DATASETS_TRUST_REMOTE_CODE: "True"
      DATASETS_TRUST_REMOTE_CODE: "True"
      HF_DATASETS_DISABLE_PROGRESS_BARS: "True"
      TQDM_DISABLE: "True"
      EVALUATE_VERBOSITY: "error"
      DATASETS_VERBOSITY: "error"
    deploy:
      replicas: 1
    extra_hosts:
      host.docker.internal: host-gateway
    volumes:
      - $EVALUATOR_CONFIG_FILE:/home/app/configs/config.json
    networks:
      - postgresql
      - temporal
      - mongodb
  
  test-api:
    build:
      context: ../../../
      dockerfile: apps/python/api/Dockerfile
    image: pocket_ml_testbench_test_api:dev
    extra_hosts:
      host.docker.internal: host-gateway
    ports:
      - 3001:3001
  
  web:
    build:
      context: ../../../
      dockerfile: apps/nodejs/web/Dockerfile
      args:
        SHOW_STDERR: $SHOW_STDERR
        API_ENDPOINT_URL: $API_ENDPOINT_URL
    image: pocket_ml_testbench_web:dev
    extra_hosts:
      host.docker.internal: host-gateway
    ports:
      - 3000:3000
    depends_on:
      test-api:
        condition: service_started

networks:
  temporal:
    name: temporal
    external: true
  postgresql:
    name: postgresql
    external: true
  mongodb:
    name: mongodb
    external: true